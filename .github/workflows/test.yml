name: ðŸ”‚ Unit tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]

    name: Python ${{ matrix.python-version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up cache
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'requirements-tests.txt') }}-test-v03

      - name: Install dependencies
        run: pip install -r requirements-tests.txt

      - name: Run test
        env:
          MYSQL_USER_NAME: root
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: pytest --cov=absolute_to_relative_sibling --cov=tests --cov-report=xml --cov-config=pyproject.toml -vv
        if: ${{ always() }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: ${{ always() }}
        with:
          fail_ci_if_error: true
          verbose: true
